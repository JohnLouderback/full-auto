name: Build All Projects

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

env:
  CONFIGURATION: Release
  PLATFORM: x64

jobs:
  build:
    runs-on: windows-2022

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.11.0"

      - name: Upgrade npm to v11
        run: |
          npm i -g npm@11
          npm --version
        shell: pwsh

      - name: Setup Yarn
        run: npm install -g yarn@1.22.19

      - name: Restore npm download cache
        id: npm-dl
        uses: actions/cache/restore@v4
        with:
          path: ~\AppData\Local\npm-cache
          key: npmcache-${{ runner.os }}-node20-npm11-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            npmcache-${{ runner.os }}-node20-npm11-
            npmcache-${{ runner.os }}-node20-

      - name: Restore Yarn download cache
        id: yarn-dl
        uses: actions/cache/restore@v4
        with:
          path: ~\AppData\Local\Yarn\Cache\v6
          key: yarncache-${{ runner.os }}-node20-yarn1-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            yarncache-${{ runner.os }}-node20-yarn1-
            yarncache-${{ runner.os }}-node20-

      - name: Restore NuGet packages cache
        id: nuget-cache
        uses: actions/cache/restore@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj', '**/*.vcxproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore Node modules cache
        id: node-modules
        uses: actions/cache/restore@v4
        with:
          path: |
            ScriptEditor/node_modules
            ScriptEditor/electron-app/node_modules
            ScriptEditor/script-ed/node_modules
            ScriptEditor/script-ed-ts-vfs/node_modules
            ScriptEditor/script-ed-ts-vfs-plugin/node_modules
            TypeScriptCompiler/node_modules
            build-scripts/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock', '**/package-lock.json', 'build-scripts/package.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install build script dependencies
        if: steps.node-modules.outputs.cache-hit != 'true'
        run: |
          cd build-scripts
          npm ci
        shell: pwsh

      - name: Install esproj dependencies
        if: steps.node-modules.outputs.cache-hit != 'true'
        run: |
          cd YamlSchemaTypes
          npm ci
          cd ../TypeScriptCompiler
          npm ci
          cd ../ScriptEditor
          yarn install --frozen-lockfile
        shell: pwsh
        env:
          CL: /DNOMINMAX
          npm_config_msvs_version: 2022

      - name: Save npm download cache
        if: always() && steps.npm-dl.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: ~\AppData\Local\npm-cache
          key: ${{ steps.npm-dl.outputs.cache-primary-key }}

      - name: Save Yarn download cache
        if: always() && steps.yarn-dl.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: ~\AppData\Local\Yarn\Cache\v6
          key: ${{ steps.yarn-dl.outputs.cache-primary-key }}

      - name: Save Node modules cache
        if: always() && steps.node-modules.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: |
            ScriptEditor/node_modules
            ScriptEditor/electron-app/node_modules
            ScriptEditor/script-ed/node_modules
            ScriptEditor/script-ed-ts-vfs/node_modules
            ScriptEditor/script-ed-ts-vfs-plugin/node_modules
            TypeScriptCompiler/node_modules
            build-scripts/node_modules
          key: ${{ steps.node-modules.outputs.cache-primary-key }}

      - name: Restore NuGet packages
        run: nuget restore Downscaler.sln -NonInteractive -Verbosity detailed

      - name: Save NuGet packages cache
        if: always() && steps.nuget-cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: ~/.nuget/packages
          key: ${{ steps.nuget-cache.outputs.cache-primary-key }}

      - name: Build solution
        run: |
          msbuild Downscaler.sln `
            -p:Configuration=${{ env.CONFIGURATION }} `
            -p:Platform=${{ env.PLATFORM }} `
            -p:BuildInParallel=true `
            -maxcpucount `
            -nologo `
            -verbosity:minimal
        shell: pwsh

      - name: Collect and deduplicate build outputs
        run: |
          cd build-scripts
          node collect-outputs.js
        shell: pwsh

      - name: Create unified distribution
        run: |
          cd build-scripts
          node create-distribution.js
        shell: pwsh

      - name: Validate build output
        run: |
          cd build-scripts
          node validate-build.js
        shell: pwsh

      - name: Create artifact archive
        run: |
          Compress-Archive -Path "dist/*" -DestinationPath "downscaler-build-${{ github.sha }}.zip" -CompressionLevel Optimal
        shell: pwsh

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: downscaler-build-${{ github.sha }}
          path: downscaler-build-${{ github.sha }}.zip
          retention-days: 90
          compression-level: 0

      - name: Upload build report (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: build-report-${{ github.sha }}
          path: build-outputs/build-report.json
          retention-days: 30

      - name: Upload validation report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: validation-report-${{ github.sha }}
          path: dist/validation-report.json
          retention-days: 30
